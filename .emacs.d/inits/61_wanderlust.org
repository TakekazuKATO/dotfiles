* Wanderlust
  emacs のメーラ
  - [[http://www.emacswiki.org/emacs/WanderLust][EmacsWiki: Wander Lust]]
  - [[http://box.matto.nl/emacsgmail.html][Emacs with Wanderlust and GMail | box.matto.nl]]
  - [[http://www.gfd-dennou.org/member/uwabami/cc-env/emacs/wl_config.html][Youhei SASAKI's official site: Wanderlust の設定]]

  ここでは, 家と会社で共通の設定を書く. 環境ごとの設定は~/.wl に記入する.

* Start of Config
#+begin_src emacs-lisp
(use-package wl
  :commands (wl wl-draft wl-other-frame)
  :config
#+end_src

* 基本設定
#+begin_src emacs-lisp

; この行がないと imap サーバに繋がらない
(setq ssl-certificate-verification-policy 1)

;; 画面を普通のメーラみたいな 3 ペインに
(setq wl-stay-folder-window t)

;; 大きなメッセージを分割して送信しない (デフォルトは t で分割する)
(setq mime-edit-split-message nil)

;; 起動時からオフラインにする
;; (setq wl-plugged nil)

;; サマリモードで日時を英語表示
;; (setq wl-summary-weekday-name-lang 'en)

;; メールを書くときは見出し画面を残して, フル画面にする
(setq wl-draft-reply-buffer-style 'keep)

;; 送信済み IMAP フォルダは送信と同時に既読にする
(setq wl-fcc-force-as-read t)

;; 最初からスレッドを開いておかない
;;(setq wl-thread-insert-opened nil)
;; スレッドを分割するしきい値 (デフォルト:30)
(setq wl-summary-max-thread-depth 30)

;; 警告無しに開けるメールサイズの最大値 (デフォルト:30K)
(setq elmo-message-fetch-threshold 500000)

;; プリフェッチ時に確認を求めるメールサイズの最大値 (デフォルト:30K)
(setq wl-prefetch-threshold 500000)

;;; from,to のデコード指定.
(mime-set-field-decoder
'From nil 'eword-decode-and-unfold-unstructured-field-body)
(mime-set-field-decoder
'To nil 'eword-decode-and-unfold-unstructured-field-body)

;; 通信のオブション
(setq ssl-program-arguments '("s_client" "-quiet" "-host" host "-port" service))
#+end_src

* HTML メール対策
  eww がつかえるか??
  - [[http://blog.gmane.org/gmane.mail.wanderlust.general.japanese/month=20140101][Japanese discussion of the Wanderlust mail/news reader for Emacs/XEmacs]]

#+begin_src emacs-lisp
;; HTML ファイルは表示しない.
;; (setq mime-setup-enable-inline-html nil)

(setq mime-setup-enable-inline-html 'shr) ;; eww を利用する.

;; text/plain を html よりも優先
(set-alist 'mime-view-type-subtype-score-alist '(text . html) 0)
#+end_src

* 無視するヘッダ
  - http://kaworu.jpn.org/kaworu/2008-04-29-1.php

#+begin_src emacs-lisp
;; summary-mode ですべての header を一旦除去
(setq mime-view-ignored-field-list '("^.*"))

;; ;; 表示するヘッダ.
(setq wl-message-visible-field-list
(append mime-view-visible-field-list
'("^Subject:" "^From:" "^To:" "^Cc:"
"^X-Mailer:" "^X-Newsreader:" "^User-Agent:"
"^X-Face:" "^X-Mail-Count:" "^X-ML-COUNT:"
)))
;; ;; 隠すメールヘッダを指定.
;; (setq wl-message-ignored-field-list
;; (append mime-view-ignored-field-list
;; '(".*Received:" ".*Path:" ".*Id:" "^References:"
;; "^Replied:" "^Errors-To:"
;; "^Lines:" "^Sender:" ".*Host:" "^Xref:"
;; "^Content-Type:" "^Content-Transfer-Encoding:"
;; "^Precedence:"
;; "^Status:" "^X-VM-.*:"
;; "^X-Info:" "^X-PGP" "^X-Face-Version:"
;; "^X-UIDL:" "^X-Dispatcher:"
;; "^MIME-Version:" "^X-ML" "^Message-I.:"
;; "^Delivered-To:" "^Mailing-List:"
;; "^ML-Name:" "^Reply-To:" "Date:"
;; "^X-Loop" "^X-List-Help:"
;; "^X-Trace:" "^X-Complaints-To:"
;; "^Received-SPF:" "^Message-ID:"
;; "^MIME-Version:" "^Content-Transfer-Encoding:"
;; "^Authentication-Results:"
;; "^X-Priority:" "^X-MSMail-Priority:"
;; "^X-Mailer:" "^X-MimeOLE:"

;; ;; add for gmail
;; "^Received-SPF:" "Delivered-To:" "Authentication-Results:"
;; "DKIM-Signature:" "DomainKey-Signature:"
;; "MIME-Version:" "Message-ID:"
;; "List-Unsubscribe:"
;; )))
#+end_src

* Summary

#+begin_src emacs-lisp
;; サマリの横幅は制限なし ... 動かない..
(setq wl-suumary-width nil)
(setq wl-summary-indent-length-limit nil)
(setq wl-summary-subject-length-limit nil)

;; これを宣言すると, SUMARRY view が動かない. この解決に 3 時間かかった.
;; (setq wl-summary-line-format "%n%T%P%1@%M/%D (%W)%h:%m %t%[%17 (%c %f%) %] %s")
#+end_src

* 添付ファイル
  - 添付する C-c C-x Tab
  - 添付ダウンロード: ダウンロードパスで v

#+begin_src emacs-lisp
;; 添付ファイルを開くためのおまじない
(setq mime-play-delete-file-immediately nil)

;;;---------------------------------------------------
;; ファイル名が日本語の添付ファイルをデコードする
(eval-after-load "mime"
'(defadvice mime-entity-filename
(after eword-decode-for-broken-MUA activate)
"Decode eworded file name for *BROKEN* MUA."
(when (stringp ad-return-value)
(setq ad-return-value (eword-decode-string ad-return-value t)))))

;; ファイル名が日本語の添付ファイルをエンコードする [semi-gnus-ja: 6046]
(eval-after-load "std11"
'(defadvice std11-wrap-as-quoted-string (before encode-string activate)
"Encode a string."
(use-package eword-encode)
(ad-set-arg 0 (or (eword-encode-string (ad-get-arg 0)) "" )) ))

;; 添付ファイルがある場合は「@」を表示
;; (setq elmo-msgdb-extra-fields
;; (cons "content-type" elmo-msgdb-extra-fields))
;; (setq wl-summary-line-format-spec-alist
;; (append wl-summary-line-format-spec-alist
;; '((?@ (wl-summary-line-attached)))))
#+end_src

* 検索
  Summary モードで V を入力.
  - [[http://cns-guide.sfc.keio.ac.jp/2004/7/6/4.html][6.4 メッセージの検索]]

** Namazu
   レガシーっぽい.
  - [[http://www.emacswiki.org/emacs/Namazu][EmacsWiki: Namazu]]
  - [[http://emacs-21.ki.nu/application/wl-namazu.html][Emacs Application/wl-namazu]]
   
** mu
  linux のみ. Windows ではつかえない.
  - [[https://code.google.com/p/mu0/][mu0 - mu is a collection of utilties for indexing and searching Maildirs - Google Project Hosting]]
  
* Tips
** Yassnipet
   draft-mode で yassnipet を有効化. うまくうごかない. . .

   #+begin_src emacs-lisp
(add-hook 'wl-draft-mode-hook
          '(lambda ()
             (yas-minor-mode)))
   #+end_src

** Password
  パスワードを省略するためには, パスワード入力後に以下を入力.

#+begin_src language
M-x elmo-passwd-alist-save
#+end_src

** NEWS
   見たら q を押すと, また見ますか? と聞かれるので No を選択.
   - [[http://d.hatena.ne.jp/fujimisakari/20120204/1328375322][wanderlust を起動すると毎回 NEWS が起動してしまう - 安定の漢になるために]]

* windows
** init file の置き場所
  cygwin の~/dotfiles を Home にしているので,
  dotfiles に.wl, .address, .folders を配置.

** gmail との連携
   windows だと gmail で送信できない. gnutls-cli がない.
   - [[http://d.hatena.ne.jp/buzztaiki/20090715/1247619151][wanderlust で ssl 接続に gnutls を使う - 適当めも]]  

   cygwin でいけるか?
   - [[http://www.psg.com/lists/wanderlust/msg02177.html][Re: Wanderlust + Gmail + EMACS 24.1 + WinXP/32?]]

   ダメだった. 諦める.

#+begin_src emacs-lisp
;; cygwin から gnutil を取得
;; (setq starttls-negotiation-by-kill-program t
;;       starttls-kill-program "c:/cygwin64/bin/kill.exe"
;;       starttls-kill-program "c:/cygwin64/bin/gnutls-cli.exe"      
;;       starttls-use-gnutls t)

;; (defadvice starttls-negotiate (around use-external-kill activate)
;;   (if (and (boundp 'starttls-negotiation-by-kill-program)
;; 	   starttls-negotiation-by-kill-program)
;;       (call-process starttls-kill-program nil nil nil
;; 		    "-ALRM" (format "%d" (process-id process)))
;;     ad-do-it))

;; (setq ssl-program-name "c:/cygwin64/bin/gnutls-cli.exe")
;; (setq ssl-program-arguments '("--insecure" "-p" service host))
#+end_src


* End of Config
#+begin_src emacs-lisp
)
#+end_src
