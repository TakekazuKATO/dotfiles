* Java
  打倒 Eclipse! Eclipse なんかぶっつぶせ!

  そんな感じの Java 設定です.
  
* Global Setting
** indent
   なんか, Eclipse と Emacs でインデントあってない.

   - [[http://d.hatena.ne.jp/mzp/20090618/emacs][インデントの設定まとめ - みずぴー日記]]
   - [[http://stackoverflow.com/questions/5556558/getting-consistent-indentation-in-eclipse-and-emacs][Getting consistent indentation in Eclipse and Emacs - Stack Overflow]]
   - [[http://yohshiy.blog.fc2.com/blog-entry-172.html][Emacs でのタブ幅の設定 | プログラマーズ雑記帳]]

#+begin_src emacs-lisp
(add-hook 'java-mode-hook
	 (lambda ()
	 ;; タブ幅
	 (setq tab-width 2)
	 ;; タブはとりあえず有効. プロジェクトによって変える.
	 (setq indent-tabs-mode t)
	 (setq c-basic-offset 2)))
#+end_src

* Mode
** malabar-mode
   A better Java mode for Emacs.

   https://github.com/m0smith/malabar-mode

   el-get で取得. fringe-helper に依存. ダウンロードしたら, mvn package.

   Maven の仕組みがうまくわからないので封印した.

#+begin_src emacs-lisp
;; (require 'cedet)
;; (require 'semantic)
;; (load "semantic/loaddefs.el")
;; (semantic-mode 1)
;; (require 'malabar-mode)
;; (add-to-list 'auto-mode-alist '("\\.java\\'" . malabar-mode))

;; ;; If you want to mimic the IDEish compile-on-save behaviour
;; (add-hook 'malabar-mode-hook
;;      (lambda () 
;;        (add-hook 'after-save-hook 'malabar-compile-file-silently
;;                   nil t)))
#+end_src

* Others
** auto-java-complete
   auto-complete の Java 用.
   - [[http://www.emacswiki.org/emacs/AutoJavaComplete][EmacsWiki: Auto Java Complete]]
   - https://github.com/emacs-java/auto-java-complete
   - http://www.emacswiki.org/emacs/ajc-java-complete-my-config-example.el

*** Install
    参考: https://github.com/emacs-java/auto-java-complete/blob/master/Install

    - AutoComplete と Yasnippet を事前にインストールする必要がある.
    - github からリポジトリ取得.
    - テンプレートタグを解凍

#+begin_src bash
% bunzip2 java_base2.tag.bz2
% mv java_base2.tag ~/.java_base.tag
#+end_src

  自分の環境に合わせてタグを生成するには,

    - CLASSPATH を設定
    - Tag を生成.

#+begin_src bash
% javac Tags.java
% java Tags
#+end_src

*** config
    eclim との機能競合を起こすので, 一旦封印しておくか.

#+begin_src emacs-lisp
;; (require 'ajc-java-complete-config)
;; (add-hook 'java-mode-hook 'ajc-java-complete-mode)
;; (add-hook 'find-file-hook 'ajc-4-jsp-find-file-hook)
#+end_src

* JUnit
** 事前準備
   環境変数を設定.

#+begin_src bash
export JUNIT_HOME = /usr/share/java
export CLASSPATH = $JUNIT_HOME/junit.jar:$CLASSPATH
#+end_src

** コンソールから起動
   - https://github.com/junit-team/junit/wiki/Test-runners

** ant
   Emacs から ant を実行するためのヘルパー
   - https://github.com/apg/ant-el

#+begin_src emacs-lisp
(autoload 'ant "ant" "" t)
#+end_src

* Build
** Ant
   - [[http://dev.ariel-networks.com/Members/matsuyama/emacs-ant/][emacs で Ant を使う - ありえるえりあ]]
   - [[http://www.javadrive.jp/ant/][Apache Ant の使い方]]
   - build.xml の書き方 [[http://www.techscore.com/tech/Java/ApacheJakarta/Ant/7-2/][7. 基本的なタスク (2) | TECHSCORE (テックスコア)]]   

** Marven

** Gradle
   Gradle support for emacs-project-mode.
   - https://github.com/rimerosolutions/emacs-gradle-project-mode

   project-mode に依存してる.

   #+begin_src emacs-lisp
   (autoload 'emacs-gradle-project-mode "emacs-gradle-project-mode" "emacs-gradle-Project Mode" t)
   #+end_src

* JDEE
  むむむ, , , コンパイルできない. できるようになるまで封印!

#+begin_src emacs-lisp
;;(add-to-list 'load-path "~/.emacs.d/jdee/lisp")
;; (load "jde")
;;(autoload 'jde-mode "jde" "Java Development Environment for Emacs." t)

;; jde-mode は手動で有効にする
;; (setq auto-mode-alist (cons '("\.java$" . jde-mode) auto-mode-alist))
#+end_src

自動補完がきかないのでキーバインド変更.

#+begin_src emacs-lisp
;; (define-key eclim-mode-map (kbd "C-c C-v .") 'jde-complete)
#+end_src

** prj.el
   プロジェクト用の設定ファイル. Eclipse でいうところの.project
   読み込んだ java ソースファイルのあるディレクトリからみつかるまで
   親をたどってさがしてくれる.
   プロジェクトのトップなんかにおいとくと便利.

#+begin_src emacs-lisp
;; (jde-project-file-version "1.0")
;; ;; JDK
;; (setq jde-jdk-registry
;;       '(("1.4" . "/usr/lib/jvm/blackdown-jdk-1.4.2")
;;         ("1.5" . "/usr/lib/jvm/sun-jdk-1.5")
;;         ("1.6" . "/usr/lib/jvm/sun-jdk-1.6")
;;         ("1.7" . "/usr/lib/jvm/java-7-openjdk")))

;; (setq jde-jdk '("1.7"))
;; (setq jde-jdk-doc-url "http://java.sun.com/javase/ja/7/docs/ja/api/")
;; (setq jde-help-docsets '(("JDK API" "http://java.sun.com/javase/ja/7/docs/ja/api/" nil)))
#+end_src
   
** JUnit

#+begin_src emacs-lisp
;; JUnit4
;; (setq jde-junit-testrunner-type "org.junit.runner.JUnitCore")
#+end_src

** Bookmark
   - 公式: [[http://jdee.sourceforge.net/][Java Development Environment for Emacs]]
   - github:mirror https://github.com/emacsmirror/jdee/

   - [[http://mikio.github.io/article/2012/12/23_emacsjdeejava.html][Emacs 中毒者に贈る JDEE による Java 開発環境の構築|ざる魂]]
   - [[http://www.02.246.ne.jp/~torutk/jdee/jdee.html][JDEE:Java Development Environment for Emacs]]
   - [[http://epian-wiki.appspot.com/wiki/Emacs/JDEE][Emacs/JDEE - epian-wiki]]
   - [[https://github.com/toshikiw/qiita/blob/master/malabar-mode%E3%81%A6%E3%82%99java%E3%82%92%E6%9B%B8%E3%81%8F.md][qiita/malabar-mode でjava を書く.md at master · toshikiw/qiita]]
   - [[https://www.youtube.com/watch?v=wsqzBEJoHLY][▶ My Java Emacs environment - YouTube]]

* eclim-emacs
   Emacs から Eclipse をつかう.

  - https://github.com/senny/emacs-eclim
  - http://www.skybert.net/emacs/java/
  - http://sleepboy-zzz.blogspot.jp/2014/02/emacsjava_22.html
  - http://www.skybert.net/emacs/java/

#+begin_src emacs-lisp
(require 'eclim)
;; (setq eclim-auto-save t)
;; (setq eclim-use-yasnippet nil)

(autoload 'eclim-mode "eclim" nil t)
(add-hook 'java-mode-hook 'eclim-mode)

;; Displaying compilation error messages in the echo area
(setq help-at-pt-display-when-idle t)
(setq help-at-pt-timer-delay 0.1)
(help-at-pt-set-timer)

;; add keybinds
;; (define-key eclim-mode-map (kbd "C-c C-e b") 'eclim-problems)
(define-key eclim-mode-map (kbd "C-c C-e p q") 'eclim-problems-compilation-buffer)
(define-key eclim-mode-map (kbd "C-c C-e p o") 'eclim-problems-open)
(define-key eclim-mode-map (kbd "C-c C-e p n") 'eclim-problems-next)
(define-key eclim-mode-map (kbd "C-c C-e p p") 'eclim-problems-previous)
;; Re-map `eclim-project-create' to C so that I can use c for
;; `eclim-problems-correct'
(define-key eclim-mode-map (kbd "C-c C-e p C") 'eclim-project-create)
(define-key eclim-mode-map (kbd "C-c C-e p c") 'eclim-problems-correct)
(define-key eclim-mode-map (kbd "M-.") 'eclim-java-find-declaration)
;; find-references = list-callers.
(define-key eclim-mode-map (kbd "C-c C-e l") 'eclim-java-find-references)

;; skip warning error
(setq compilation-skip-threshold 2)

(when linux-p
(setq eclim-eclipse-dirs "/usr/share/eclipse")
(setq eclim-executable "/usr/share/eclipse/eclim")
(setq eclimd-executable "/usr/share/eclipse/eclimd")
(setq eclimd-default-workspace "/home/tsu-nera/repo/eclipse_mooc_work")
)
   #+end_src

** eclimd
   start-eclimd/stop-eclimd で起動・終了.

#+begin_src emacs-lisp
;; eclim daemon
(require 'eclimd)
#+end_src

   心なしか, Emacs から起動するよりも, コマンドラインから起動したほうが
   Emacs が軽く動作する.

** 自動保管

#+begin_src emacs-lisp
;; regular auto-complete initialization
;; (require 'auto-complete-config)
;; (ac-config-default)

;; ajc-java-complete-config を利用するため一旦封印
;; add the emacs-eclim source
;; (add-hook 'java-mode-hook 
;;    (lambda () 
;;    (require 'ac-emacs-eclim-source)
;;    (ac-emacs-eclim-config)
;;    ))

;; for company-mode
;; (require 'company-emacs-eclim)
;; (company-emacs-eclim-setup)

#+end_src

** Program 起動
   org.eclim.java.run.mainclass にメインクラスを設定.

   - [[http://eclim.org/vim/java/java.html][Java / Jps - eclim (eclipse + vim)]]
   - [[http://eclim.org/vim/settings.html][Settings - eclim (eclipse + vim)]]
   - [[http://stackoverflow.com/questions/7394811/eclim-what-to-set-org-eclim-java-run-mainclass-to][vim - Eclim - What to set org.eclim.java.run.mainclass to? - Stack Overflow]]


  設定方法は, .settings/org.eclim.prefs というファイルを作成して,以下を書き込む

  #+begin_src language
  org.eclim.java.run.mainclass=<Class Name>
  #+end_src

  しかし, これだけでは動作しなかった. main メソッドの場所で
  eclim-run-class を実行すると, ようやく eclim 経由で java program が起動.
  
  起動は, eclim の機能を利用するのではなくて,
  別のビルドツールを利用したほうがいいな.

** JUnit 起動

#+begin_src emacs-lisp
(defun eclim-run-test ()
  (interactive)
  (if (not (string= major-mode "java-mode"))
    (message "Sorry cannot run current buffer."))
  (compile (concat eclim-executable " -command java_junit -p " eclim--project-name " -t " (eclim-package-and-class))))
;; (define-key eclim-mode-map (kbd "C-c C-e j t") 'eclim-run-test)
(define-key eclim-mode-map (kbd "C-c C-e j t") 'recompile)
#+end_src

実は, recompile でよかったりして..

* Android
