* C言語・C++

#+begin_src emacs-lisp
(require 'cc-mode)

;; c-mode-common-hookは C/C++の設定
(add-hook 'c-mode-common-hook
	  (lambda ()
	    (setq c-default-style "k&r") ;; カーニハン・リッチースタイル
	    (setq indent-tabs-mode nil)  ;; タブは利用しない
	    (setq c-basic-offset 2)      ;; indentは 2スペース
	    ))

;; Smart Compile
(define-key c-mode-map (kbd "C-c c") 'smart-compile)
#+end_src

* flymake
C/C++に関わる設定を移動。

#+begin_src emacs-lisp
(defun flymake-cc-init ()
  (let* ((temp-file   (flymake-init-create-temp-buffer-copy
		       'flymake-create-temp-inplace))
	 (local-file  (file-relative-name
		       temp-file
		       (file-name-directory buffer-file-name))))
    (list "g++" (list "-Wall" "-Wextra" "-fsyntax-only" local-file))))

(push '("\\.c$" flymake-cc-init) flymake-allowed-file-name-masks)
(push '("\\.cpp$" flymake-cc-init) flymake-allowed-file-name-masks)

(add-hook 'c++-mode-hook
	  '(lambda ()
	     (flymake-mode t)))(require 'flymake)

(add-hook 'c-mode-hook
	  '(lambda ()
	     (flymake-mode t)))(require 'flymake)

#+end_src

