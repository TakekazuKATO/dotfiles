* helm
  絞りこみインターフェイス.
  - https://github.com/emacs-helm

  ダウンロードしたら, make でコンパイルする.

* 組み込み helm
  helm project にもとから入っているもの.
  - https://github.com/emacs-helm/helm

** Basic Setting 
#+begin_src emacs-lisp
(use-package helm-config
  :config
  (helm-mode 1) ;; 基本的な設定はこれで実施される.
#+end_src

#+begin_src emacs-lisp
(global-set-key (kbd "C-x C-r") 'helm-recentf) ;; 最近利用したファイルを検索
(global-set-key (kbd "M-y") 'helm-show-kill-ring) ;; 最近消したクリップボード履歴
(global-set-key (kbd "M-r") 'helm-occur) ;; バッファを検索
(global-set-key (kbd "M-x") 'helm-M-x) ;; M-X を 絞り込み
(global-set-key (kbd "C-x C-b") 'helm-elscreen) ;; elscreen のタブを切り替え
#+end_src

** helm-semantic-or-imenu
   imenu の強化版. helm-semantic-or-imenu C-x c i でバインドされている. 便利.

** helm-buffer-list
   default. バッファの絞り込み.
   - 絞りこみの文字列の先頭に@をつけることでバッファ内の文字列でしぼりこみ.
   - 絞りこみの文字列の先頭に/ をつければ, ディレクトリ名で絞りこみ.

#+begin_src emacs-lisp
(global-set-key (kbd "C-x b") 'helm-buffers-list)
#+end_src

** helm-all-mark-rings
   過去の global-mark を絞り込み. これは便利!

#+begin_src emacs-lisp
(global-set-key (kbd "M-SPC") 'helm-all-mark-rings)
#+end_src

** helm-bookmarks
   Nice Bookmarks.

  - [[http://tototoshi.hatenablog.com/entry/20101226/1293334388][Emacs のブックマーク機能 - tototoshi の日記]]
  - [[http://www.emacswiki.org/emacs/BookMarks][EmacsWiki: Book Marks]]

  C-x r b で helm-mode-bookmark-jump が発動するみたいなので, あえてキーバインドしない.

  - C-x r m' – set a bookmark at the current location (e.g. in a file)
  - C-x r b' – jump to a bookmark
  - C-x r l' – list your bookmarks
  - M-x bookmark-delete' – delete a bookmark by name これも helm が発動する.

** End of Helm Config

#+begin_src emacs-lisp
)
#+end_src
    
* 拡張 helm
  github から拾ってきたり, emacs-helm からとってきたもの.
  - https://github.com/emacs-helm

** helm-descbinds
   コマンド割り当てを調べる.
   - https://github.com/emacs-helm/helm-descbinds

#+begin_src emacs-lisp
(use-package helm-descbinds
  :commands helm-descbinds
  :config (helm-descbinds-mode 1)
  )
#+end_src

** helm-orgcard
   orgcard を引く.
   - https://github.com/emacs-helm/helm-orgcard

#+begin_src emacs-lisp
(use-package helm-orgcard
  :commands helm-orgcard
  :config (setq hoc-lang-selector 'ja))
#+end_src

** helm-ag
   ag 結果を helm で絞り込み. 
   - https://github.com/syohex/emacs-helm-ag

#+begin_src emacs-lisp
(use-package helm-ag
  :bind ("C-x g r" . helm-ag)
  )
#+end_src

** helm-migemo
   helm の日本語検索.
   - https://github.com/emacs-helm/helm-migemo

  うまく動かないので, パッチをあてる.
  - [[http://rubikitch.com/2014/12/19/helm-migemo/][emacs helm-migemo.el : helm で正しく Migemo を動作させる!]]

#+begin_src emacs-lisp
(use-package helm-migemo
  :config
  (require 'my-patch-helm-migemo)
)
#+end_src

** helm-kaomoji
   顔文字.
   
#+begin_src emacs-lisp
(use-package helm-kaomoji :commands helm-kaomoji)
#+end_src

** TODO helm-flyspell
   すごく便利だったのに, 動かなくなった. . .
   - from:  https://gist.github.com/cofi/3013327
   - forked: https://gist.github.com/tsu-nera/2ac6ee1555bcf8597fa6

#+begin_src emacs-lisp
(eval-after-load 'flyspell
    '(use-package helm-flyspell-correct
       :bind ("C-x g i" . helm-flyspell-correct)
       ))
#+end_src

** helm-etags-plus
   - [[https://github.com/jixiuf/helm-etags-plus][jixiuf/helm-etags-plus]]

   C 言語では, これがまともに動く. gtags は動かない.
   etags で TAGS を生成する.

   - helm-etags-select C-x c e

#+begin_src emacs-lisp
(use-package helm-etags+ :defer t)
(use-package ctags-update :defer t)
#+end_src

** helm-swoop
   - [[https://github.com/ShingoFukuyama/helm-swoop][ShingoFukuyama/helm-swoop]]
   - [[http://rubikitch.com/2014/12/25/helm-swoop/][emacs helm-swoop.el : 【これはすごい】バッファ全体を Migemo 絞り込み検索して走り回れ!]]

#+begin_src emacs-lisp
(use-package helm-swoop
  :bind (("M-o" . helm-swoop)
	 ("M-O" . helm-swoop-back-to-last-point)
	 ("C-x M-o" . helm-multi-swoop)
	 ("C-M-o" . helm-multi-swoop-all))
  :config
  ;; When doing isearch, hand the word over to helm-swoop
  (define-key isearch-mode-map (kbd "M-o") 'helm-swoop-from-isearch)
  ;; From helm-swoop to helm-multi-swoop-all
  (define-key helm-swoop-map (kbd "M-o") 'helm-multi-swoop-all-from-helm-swoop)
  ;; When doing evil-search, hand the word over to helm-swoop
  ;; (define-key evil-motion-state-map (kbd "M-i") 'helm-swoop-from-evil-search)

  ;; Save buffer when helm-multi-swoop-edit complete
  (setq helm-multi-swoop-edit-save t)

  ;; If this value is t, split window inside the current window
  (setq helm-swoop-split-with-multiple-windows nil)

  ;; Split direcion. 'split-window-vertically or 'split-window-horizontally
  (setq helm-swoop-split-direction 'split-window-vertically)

  ;; If nil, you can slightly boost invoke speed in exchange for text color
  (setq helm-swoop-speed-or-color nil)

  (define-key helm-swoop-map (kbd "C-s") 'swoop-action-goto-line-next)
  (define-key helm-swoop-map (kbd "C-r") 'swoop-action-goto-line-prev)
)
#+end_src

** (helm-) imenu-anywhere
   imenu の置き換え.
   - https://github.com/vspinu/imenu-anywhere
   - [[http://rubikitch.com/2014/12/17/imenu-anywhere/][簡易関数定義ジャンプ imenu を ido/helm 化した上で他のファイルまで拡張する!]]

#+begin_src emacs-lisp
(use-package imenu-anywhere
  :bind ("C-x c i" . helm-imenu-anywhere))
#+end_src

* 未使用中...
** helm-github-issues
#+begin_src emacs-lisp
(use-package helm-github-issues :commands helm-github-issues :disabled t)
#+end_src

** helm-open-github
#+begin_src emacs-lisp
(use-package helm-open-github :commands helm-open-github :disabled t)
#+end_src

** helm-wl-address
   helm i/f でアドレス検索. 
   - https://github.com/kenbeese/helm-wl-address
   - [[http://qiita.com/kenbeese/items/438c1c8d664198d8527f][Emacs - wanderlust のアドレスを helm で選択する - Qiita]]

   使いこなせていなかったりする.

#+begin_src emacs-lisp
(use-package helm-wl-address :disabled t)
#+end_src

** helm-google
   google 検索.英語だけ.
   - https://github.com/steckerhalter/helm-google

   日本語だからか? うごかない.

#+begin_src emacs-lisp
;; (use-package helm-google)
;; (global-set-key (kbd "C-x g g"
;;		     ) 'helm-google)
;; (setq helm-google-tld "co.jp")
#+end_src

** helm-google-suggest

#+begin_src emacs-lisp
;; (global-set-key (kbd "C-x g g") 'helm-google-suggest)
#+end_src

** helm-gtags
   GNU Global.
   - [[https://github.com/syohex/emacs-helm-gtags][syohex/emacs-helm-gtags]]

   うーん, 動かない. . .error helm-process-delay-source

#+begin_src emacs-lisp
;; (use-package helm-gtags)

;; ;;; Enable helm-gtags-mode
;; (add-hook 'c-mode-hook 'helm-gtags-mode)
;; (add-hook 'c++-mode-hook 'helm-gtags-mode)
;; (add-hook 'asm-mode-hook 'helm-gtags-mode)
;; (add-hook 'java-mode-hook 'helm-gtags-mode)

;; ;; customize
;; (setq
;;  helm-gtags-ignore-case t
;;  helm-gtags-auto-update t
;;  helm-gtags-use-input-at-cursor t
;;  helm-gtags-pulse-at-cursor t

;; ;; helm-gtags-suggested-key-mapping t
;;  )

;; ;; key bindings
;; (eval-after-load "helm-gtags"
;;   '(progn
;;      (define-key helm-gtags-mode-map (kbd "M-t") 'helm-gtags-find-tag)
;;      (define-key helm-gtags-mode-map (kbd "M-r") 'helm-gtags-find-rtag)
;;      (define-key helm-gtags-mode-map (kbd "M-s") 'helm-gtags-find-symbol)
;;      (define-key helm-gtags-mode-map (kbd "M-,") 'helm-gtags-pop-stack)))
#+end_src

