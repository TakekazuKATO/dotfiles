* helm

- https://github.com/emacs-helm

#+begin_src emacs-lisp
(eval-when-compile (require 'cl))

;;; ミニバッファで C-h でヘルプでないようにする
(load "term/bobcat")
(when (fboundp 'terminal-init-bobcat)
  (terminal-init-bobcat))

(require 'helm-config)
(require 'helm-command)
(require 'helm-descbinds)
(require 'helm-c-yasnippet)
(require 'gist)
(require 'helm-gist)
(autoload 'helm-github-issues "helm-github-issues"
  "Helm interface for github issues" nil t)

(setq helm-idle-delay             0.2
      helm-input-idle-delay       0.2
      helm-candidate-number-limit 200)

(global-set-key (kbd "C-x b") 'helm-buffers-list)
(global-set-key (kbd "C-x C-r") 'helm-recentf)
(global-set-key (kbd "M-y") 'helm-show-kill-ring)
(global-set-key (kbd "M-r") 'helm-occur)
(global-set-key (kbd "M-x") 'helm-M-x)
(global-set-key (kbd "C-x g g") 'helm-google-suggest)
(global-set-key (kbd "C-x C-b") 'helm-elscreen)
;; helm-semantic-or-imenu C-x c i でバインドされている。便利。
(helm-mode 1)
#+end_src

** helm-orgcard
orgcardを引く。

#+begin_src emacs-lisp
(require 'helm-orgcard)
(setq hoc-lang-selector 'ja)
#+end_src

** helm-bookmarks
Nice Bookmarks.

- [[http://tototoshi.hatenablog.com/entry/20101226/1293334388][Emacsのブックマーク機能 - tototoshi の日記]]
- [[http://www.emacswiki.org/emacs/BookMarks][EmacsWiki: Book Marks]]

C-x r b で helm-mode-bookmark-jumpが発動するみたいなので、あえてキーバインドしない。

- C-x r m’ – set a bookmark at the current location (e.g. in a file)
- C-x r b’ – jump to a bookmark
- C-x r l’ – list your bookmarks
- M-x bookmark-delete’ – delete a bookmark by name これもhelmが発動する。

#+begin_src emacs-lisp
;; (global-set-key (kbd "C-x r") 'helm-bookmarks)
;; (global-set-key "\C-xrl" 'helm-bookmarks)
#+end_src

** helm-gtags
GNU Global.

#+begin_src emacs-lisp
(require 'helm-gtags)

;;; Enable helm-gtags-mode
(add-hook 'c-mode-hook 'helm-gtags-mode)
(add-hook 'c++-mode-hook 'helm-gtags-mode)

;; customize
(custom-set-variables
 '(helm-gtags-path-style 'relative)
 '(helm-gtags-ignore-case t)
 '(helm-gtags-auto-update t))

;; key bindings
(eval-after-load "helm-gtags"
  '(progn
     (define-key helm-gtags-mode-map (kbd "M-t") 'helm-gtags-find-tag)
     (define-key helm-gtags-mode-map (kbd "M-r") 'helm-gtags-find-rtag)
     (define-key helm-gtags-mode-map (kbd "M-s") 'helm-gtags-find-symbol)
     (define-key helm-gtags-mode-map (kbd "M-,") 'helm-gtags-pop-stack)))
#+end_src

** helm-ag

#+begin_src emacs-lisp
(require 'helm-ag)
(global-set-key (kbd "C-x g r") 'helm-ag)
#+end_src

** helm-migemo
   helmの日本語検索.
   - https://github.com/emacs-helm/helm-migemo

#+begin_src emacs-lisp
(require 'helm-migemo)
(setq helm-use-migemo t)
#+end_src

うまく動かないので、パッチをあてる。

- [[http://qiita.com/ballforest/items/43da06268bef651a7e7e][Emacs - helm-migemoを動くようにするパッチ - Qiita]]

#+begin_src emacs-lisp
(defun helm-compile-source--candidates-in-buffer (source)
  (helm-aif (assoc 'candidates-in-buffer source)
      (append source
	      `((candidates
		 . ,(or (cdr it)
			(lambda ()
			  ;; Do not use `source' because other plugins
			  ;; (such as helm-migemo) may change it
			  (helm-candidates-in-buffer (helm-get-current-source)))))
		(volatile) (match identity)))
    source))

(eval-after-load "helm-regexp"
  '(cl-defun helm-moccur-action (candidate
                                 &optional (method (quote buffer)) mark)
             "Jump to CANDIDATE with METHOD.
	     arg METHOD can be one of buffer, buffer-other-window, buffer-other-frame."
             (require 'helm-grep)
             (let* ((split (helm-grep-split-line candidate))
                    (buf (car split))
                    (lineno (string-to-number (nth 1 split)))
                    (split-pat (if helm-occur-match-plugin-mode
                                   (helm-mp-split-pattern helm-pattern)
                                 (list helm-pattern)))
                    ;; for helm-migemo
                    (search-func (if (featurep 'migemo)
                                     'migemo-forward
                                   're-search-forward)))
               (cl-case method
                        (buffer              (switch-to-buffer buf))
                        (buffer-other-window (switch-to-buffer-other-window buf))
                        (buffer-other-frame  (switch-to-buffer-other-frame buf)))
               (helm-goto-line lineno)
               ;; Move point to the nearest matching regexp from bol.
               (cl-loop for reg in split-pat
                        when (save-excursion
                               (funcall search-func reg (point-at-eol) t))
                        collect (match-beginning 0) into pos-ls
                        finally (goto-char (apply #'min pos-ls)))
               (when mark
                 (set-marker (mark-marker) (point))
                 (push-mark (point) 'nomsg)))))
#+end_src

** helm-kaomoji
顔文字。

#+begin_src emacs-lisp
(require 'helm-kaomoji)
#+end_src
** helm-wl-address
   helm i/fでアドレス検索

   - https://github.com/kenbeese/helm-wl-address
   - [[http://qiita.com/kenbeese/items/438c1c8d664198d8527f][Emacs - wanderlustのアドレスをhelmで選択する - Qiita]]

#+begin_src emacs-lisp
(require 'helm-wl-address)
#+end_src
